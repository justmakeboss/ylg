{"version":3,"file":null,"sources":["../src/lib/testMeet.js","../src/lib/get-transparent.js","../src/index.js"],"sourcesContent":["export default function (el, options = {}) {\n  // 取得元素在可视区的位置（相对浏览器视窗）左右上下\n  var bcr = el.getBoundingClientRect()\n  // padding+border+width\n  var mw = el.offsetWidth // 元素自身宽度\n  var mh = el.offsetHeight // 元素自身的高度\n  // 包含了导航栏\n  var w = window.innerWidth // 视窗的宽度\n  var h = window.innerHeight // 视窗的高度\n\n  var boolX = (!((bcr.right - options.left) <= 0 && ((bcr.left + mw) - options.left) <= 0) && !((bcr.left + options.right) >= w && (bcr.right + options.right) >= (mw + w))) // 左右符合条件\n  var boolY = (!((bcr.bottom - options.top) <= 0 && ((bcr.top + mh) - options.top) <= 0) && !((bcr.top + options.bottom) >= h && (bcr.bottom + options.bottom) >= (mh + h))) // 上下符合条件\n  return el.width !== 0 && el.height !== 0 && boolX && boolY\n}\n","var canvas = document.createElement('canvas')\ncanvas.getContext('2d').globalAlpha = 0.0\nvar images = {}\n\nexport default function (src, w, h) {\n  if (images[src]) return images[src]\n  canvas.width = w\n  canvas.height = h\n  var data = canvas.toDataURL('image/png')\n  images[src] = data\n  return data\n}\n","import testMeet from './lib/testMeet'\nimport getTransparent from './lib/get-transparent'\nconst _win = window\n\nclass LazyLoadImg {\n  // 构造函数 初始化参数\n  constructor (options = {}) {\n    this.options = {\n      el: document.querySelector('body'), // 选择的元素\n      mode: 'default', // 默认模式，将显示原图，diy模式，将自定义剪切，默认剪切居中部分\n      time: 300, // 设置一个检测时间间隔\n      done: true, // 页面内所有数据图片加载完成后，是否自己销毁程序，true默认销毁，false不销毁：FALSE应用场景：页面异步不断获取数据的情况下 需要实时监听则不销毁\n      diy: { // 此属性，只有在设置diy 模式时才生效\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center center'\n      },\n      position: { // 只要其中一个位置符合条件，都会触发加载机制\n        top: 0, // 元素距离顶部\n        right: 0, // 元素距离右边\n        bottom: 0, // 元素距离下面\n        left: 0 // 元素距离左边\n      },\n      before (el) { // 图片加载之前，执行钩子函数\n\n      },\n      success (el) { // 图片加载成功，执行钩子函数\n\n      },\n      error (el) { // 图片加载失败，执行的钩子函数\n\n      }\n    }\n    // 深拷贝 如果都有 则右面的值 option.position会覆盖this.options.position\n    options.position = Object.assign({}, this.options.position, options.position)\n    options.diy = Object.assign({}, this.options.diy, options.diy)\n    Object.assign(this.options, options)\n    this.start()\n  }\n  start () {\n    this._timer = true\n    this._start()\n  }\n  _start () {\n    var { options } = this\n    clearTimeout(this._timer) // 清除定时器\n    if (!this._timer) return\n    this._timer = setTimeout(() => {\n      var list = Array.prototype.slice.apply(options.el.querySelectorAll('[data-src]'))\n      if (!list.length && options.done) return clearTimeout(this._timer)\n      list.forEach((el) => {\n        if (!el.dataset.LazyLoadImgState && testMeet(el, options.position)) {\n          this.loadImg(el)\n        }\n      })\n      this._start()\n    }, options.time)\n  }\n  loadImg (el) { // 加载图片\n    var { options } = this\n    el.dataset.LazyLoadImgState = 'start'\n    options.before.call(this, el)\n    var img = new _win.Image()\n    img.src = el.dataset.src\n    // 图片加载成功\n    img.addEventListener('load', () => {\n      if (options.mode === 'diy') {\n        el.src = getTransparent(el.src, el.width, el.height)\n        options.diy.backgroundImage = 'url(' + img.src + ')'\n        Object.assign(el.style, options.diy)\n      } else {\n        el.src = img.src\n      }\n      delete el.dataset.src\n      el.dataset.LazyLoadImgState = 'success'\n      return options.success.call(this, el)\n    }, false)\n\n    // 图片加载失败\n    img.addEventListener('error', () => {\n      delete el.dataset.src\n      el.dataset.LazyLoadImgState = 'error'\n      options.error.call(this, el)\n    }, false)\n  }\n  destroy () { // 解除事件绑定\n    delete this._timer\n  }\n}\nexport default LazyLoadImg\n"],"names":["el","options","bcr","getBoundingClientRect","mw","offsetWidth","mh","offsetHeight","w","window","innerWidth","h","innerHeight","boolX","right","left","boolY","bottom","top","width","height","canvas","document","createElement","getContext","globalAlpha","images","src","data","toDataURL","_win","LazyLoadImg","querySelector","position","babelHelpers.extends","diy","start","_timer","_start","setTimeout","list","Array","prototype","slice","apply","querySelectorAll","length","done","clearTimeout","forEach","dataset","LazyLoadImgState","testMeet","loadImg","time","before","call","img","Image","addEventListener","mode","getTransparent","backgroundImage","style","success","error"],"mappings":"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"}
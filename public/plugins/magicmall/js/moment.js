/*Moment.js 2.10.6*/
(function (a, b) { typeof exports === "object" && typeof module !== "undefined" ? module.exports = b() : typeof define === "function" && define.amd ? define(b) : a.moment = b() }(this, function () { var bv; function de() { return bv.apply(null, arguments) } function aV(dX) { bv = dX } function bt(dX) { return Object.prototype.toString.call(dX) === "[object Array]" } function cM(dX) { return dX instanceof Date || Object.prototype.toString.call(dX) === "[object Date]" } function aZ(dX, d0) { var dZ = [], dY; for (dY = 0; dY < dX.length; ++dY) { dZ.push(d0(dX[dY], dY)) } return dZ } function a9(dY, dX) { return Object.prototype.hasOwnProperty.call(dY, dX) } function aW(dY, dX) { for (var dZ in dX) { if (a9(dX, dZ)) { dY[dZ] = dX[dZ] } } if (a9(dX, "toString")) { dY.toString = dX.toString } if (a9(dX, "valueOf")) { dY.valueOf = dX.valueOf } return dY } function dK(dX, d0, dZ, dY) { return az(dX, d0, dZ, dY, true).utc() } function aL() { return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false } } function ba(dX) { if (dX._pf == null) { dX._pf = aL() } return dX._pf } function c(dX) { if (dX._isValid == null) { var dY = ba(dX); dX._isValid = !isNaN(dX._d.getTime()) && dY.overflow < 0 && !dY.empty && !dY.invalidMonth && !dY.invalidWeekday && !dY.nullInput && !dY.invalidFormat && !dY.userInvalidated; if (dX._strict) { dX._isValid = dX._isValid && dY.charsLeftOver === 0 && dY.unusedTokens.length === 0 && dY.bigHour === undefined } } return dX._isValid } function bE(dY) { var dX = dK(NaN); if (dY != null) { aW(ba(dX), dY) } else { ba(dX).userInvalidated = true } return dX } var at = de.momentProperties = []; function k(d1, d0) { var dX, dZ, dY; if (typeof d0._isAMomentObject !== "undefined") { d1._isAMomentObject = d0._isAMomentObject } if (typeof d0._i !== "undefined") { d1._i = d0._i } if (typeof d0._f !== "undefined") { d1._f = d0._f } if (typeof d0._l !== "undefined") { d1._l = d0._l } if (typeof d0._strict !== "undefined") { d1._strict = d0._strict } if (typeof d0._tzm !== "undefined") { d1._tzm = d0._tzm } if (typeof d0._isUTC !== "undefined") { d1._isUTC = d0._isUTC } if (typeof d0._offset !== "undefined") { d1._offset = d0._offset } if (typeof d0._pf !== "undefined") { d1._pf = ba(d0) } if (typeof d0._locale !== "undefined") { d1._locale = d0._locale } if (at.length > 0) { for (dX in at) { dZ = at[dX]; dY = d0[dZ]; if (typeof dY !== "undefined") { d1[dZ] = dY } } } return d1 } var dJ = false; function bX(dX) { k(this, dX); this._d = new Date(dX._d != null ? dX._d.getTime() : NaN); if (dJ === false) { dJ = true; de.updateOffset(this); dJ = false } } function bK(dX) { return dX instanceof bX || (dX != null && dX._isAMomentObject != null) } function bD(dX) { if (dX < 0) { return Math.ceil(dX) } else { return Math.floor(dX) } } function dR(dY) { var dX = +dY, dZ = 0; if (dX !== 0 && isFinite(dX)) { dZ = bD(dX) } return dZ } function dF(dY, d0, dZ) { var dX = Math.min(dY.length, d0.length), d1 = Math.abs(dY.length - d0.length), d3 = 0, d2; for (d2 = 0; d2 < dX; d2++) { if ((dZ && dY[d2] !== d0[d2]) || (!dZ && dR(dY[d2]) !== dR(d0[d2]))) { d3++ } } return d3 + d1 } function cQ() { } var cT = {}; var cY; function dB(dX) { return dX ? dX.toLowerCase().replace("_", "-") : dX } function dx(d2) { var dZ = 0, dX, d0, d1, dY; while (dZ < d2.length) { dY = dB(d2[dZ]).split("-"); dX = dY.length; d0 = dB(d2[dZ + 1]); d0 = d0 ? d0.split("-") : null; while (dX > 0) { d1 = dv(dY.slice(0, dX).join("-")); if (d1) { return d1 } if (d0 && d0.length >= dX && dF(dY, d0, true) >= dX - 1) { break } dX-- } dZ++ } return null } function dv(dX) { var dZ = null; if (!cT[dX] && typeof module !== "undefined" && module && module.exports) { try { dZ = cY._abbr; require("./locale/" + dX); dr(dZ) } catch (dY) { } } return cT[dX] } function dr(dX, dY) { var dZ; if (dX) { if (typeof dY === "undefined") { dZ = q(dX) } else { dZ = r(dX, dY) } if (dZ) { cY = dZ } } return cY._abbr } function r(dX, dY) { if (dY !== null) { dY.abbr = dX; cT[dX] = cT[dX] || new cQ(); cT[dX].set(dY); dr(dX); return cT[dX] } else { delete cT[dX]; return null } } function q(dX) { var dY; if (dX && dX._locale && dX._locale._abbr) { dX = dX._locale._abbr } if (!dX) { return cY } if (!bt(dX)) { dY = dv(dX); if (dY) { return dY } dX = [dX] } return dx(dX) } var s = {}; function K(dZ, dY) { var dX = dZ.toLowerCase(); s[dX] = s[dX + "s"] = s[dY] = dZ } function dw(dX) { return typeof dX === "string" ? s[dX] || s[dX.toLowerCase()] : undefined } function cG(dZ) { var dX = {}, dY, d0; for (d0 in dZ) { if (a9(dZ, d0)) { dY = dw(d0); if (dY) { dX[dY] = dZ[d0] } } } return dX } function bw(dX, dY) { return function (dZ) { if (dZ != null) { dG(this, dX, dZ); de.updateOffset(this, dY); return this } else { return c9(this, dX) } } } function c9(dY, dX) { return dY._d["get" + (dY._isUTC ? "UTC" : "") + dX]() } function dG(dY, dX, dZ) { return dY._d["set" + (dY._isUTC ? "UTC" : "") + dX](dZ) } function b6(dX, dZ) { var dY; if (typeof dX === "object") { for (dY in dX) { this.set(dY, dX[dY]) } } else { dX = dw(dX); if (typeof this[dX] === "function") { return this[dX](dZ) } } return this } function V(d0, dZ, d1) { var d2 = "" + Math.abs(d0), dY = dZ - d2.length, dX = d0 >= 0; return (dX ? (d1 ? "+" : "") : "-") + Math.pow(10, Math.max(0, dY)).toString().substr(1) + d2 } var A = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; var cH = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g; var cw = {}; var dn = {}; function a3(dY, dX, d0, d1) { var dZ = d1; if (typeof d1 === "string") { dZ = function () { return this[d1]() } } if (dY) { dn[dY] = dZ } if (dX) { dn[dX[0]] = function () { return V(dZ.apply(this, arguments), dX[1], dX[2]) } } if (d0) { dn[d0] = function () { return this.localeData().ordinal(dZ.apply(this, arguments), dY) } } } function c3(dX) { if (dX.match(/\[[\s\S]/)) { return dX.replace(/^\[|\]$/g, "") } return dX.replace(/\\/g, "") } function a2(d0) { var dZ = d0.match(A), dY, dX; for (dY = 0, dX = dZ.length; dY < dX; dY++) { if (dn[dZ[dY]]) { dZ[dY] = dn[dZ[dY]] } else { dZ[dY] = c3(dZ[dY]) } } return function (d2) { var d1 = ""; for (dY = 0; dY < dX; dY++) { d1 += dZ[dY] instanceof Function ? dZ[dY].call(d2, d0) : dZ[dY] } return d1 } } function m(dX, dY) { if (!dX.isValid()) { return dX.localeData().invalidDate() } dY = a1(dY, dX.localeData()); cw[dY] = cw[dY] || a2(dY); return cw[dY](dX) } function a1(d0, dY) { var dX = 5; function dZ(d1) { return dY.longDateFormat(d1) || d1 } cH.lastIndex = 0; while (dX >= 0 && cH.test(d0)) { d0 = d0.replace(cH, dZ); cH.lastIndex = 0; dX -= 1 } return d0 } var P = /\d/; var Q = /\d\d/; var S = /\d{3}/; var W = /\d{4}/; var Y = /[+-]?\d{6}/; var ct = /\d\d?/; var cr = /\d{1,3}/; var cp = /\d{1,4}/; var cn = /[+-]?\d{1,6}/; var cR = /\d+/; var dS = /[+-]?\d+/; var dT = /Z|[+-]\d\d:?\d\d/gi; var R = /[+-]?\d+(\.\d{1,3})?/; var D = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i; var cB = {}; function I(dX) { return typeof dX === "function" && Object.prototype.toString.call(dX) === "[object Function]" } function u(dX, dY, dZ) { cB[dX] = I(dY) ? dY : function (d0) { return (d0 && dZ) ? dZ : dY } } function dd(dY, dX) { if (!a9(cB, dY)) { return new RegExp(bb(dY)) } return cB[dY](dX._strict, dX._locale) } function bb(dX) { return dX.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (dY, d2, d1, d0, dZ) { return d2 || d1 || d0 || dZ }).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&") } var dE = {}; function bp(dY, d0) { var dX, dZ = d0; if (typeof dY === "string") { dY = [dY] } if (typeof d0 === "number") { dZ = function (d1, d2) { d2[d0] = dR(d1) } } for (dX = 0; dX < dY.length; dX++) { dE[dY[dX]] = dZ } } function dW(dX, dY) { bp(dX, function (dZ, d2, d1, d0) { d1._w = d1._w || {}; dY(dZ, d1._w, d1, d0) }) } function cA(dZ, dX, dY) { if (dX != null && a9(dE, dZ)) { dE[dZ](dX, dY._a, dY, dZ) } } var co = 0; var cx = 1; var cg = 2; var aF = 3; var ai = 4; var a0 = 5; var H = 6; function cO(dX, dY) { return new Date(Date.UTC(dX, dY + 1, 0)).getUTCDate() } a3("M", ["MM", 2], "Mo", function () { return this.month() + 1 }); a3("MMM", 0, 0, function (dX) { return this.localeData().monthsShort(this, dX) }); a3("MMMM", 0, 0, function (dX) { return this.localeData().months(this, dX) }); K("month", "M"); u("M", ct); u("MM", ct, Q); u("MMM", D); u("MMMM", D); bp(["M", "MM"], function (dX, dY) { dY[cx] = dR(dX) - 1 }); bp(["MMM", "MMMM"], function (dX, d1, dZ, dY) { var d0 = dZ._locale.monthsParse(dX, dY, dZ._strict); if (d0 != null) { d1[cx] = d0 } else { ba(dZ).invalidMonth = dX } }); var E = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"); function a7(dX) { return this._months[dX.month()] } var by = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"); function aM(dX) { return this._monthsShort[dX.month()] } function bV(d1, d2, d0) { var dX, dZ, dY; if (!this._monthsParse) { this._monthsParse = []; this._longMonthsParse = []; this._shortMonthsParse = [] } for (dX = 0; dX < 12; dX++) { dZ = dK([2000, dX]); if (d0 && !this._longMonthsParse[dX]) { this._longMonthsParse[dX] = new RegExp("^" + this.months(dZ, "").replace(".", "") + "$", "i"); this._shortMonthsParse[dX] = new RegExp("^" + this.monthsShort(dZ, "").replace(".", "") + "$", "i") } if (!d0 && !this._monthsParse[dX]) { dY = "^" + this.months(dZ, "") + "|^" + this.monthsShort(dZ, ""); this._monthsParse[dX] = new RegExp(dY.replace(".", ""), "i") } if (d0 && d2 === "MMMM" && this._longMonthsParse[dX].test(d1)) { return dX } else { if (d0 && d2 === "MMM" && this._shortMonthsParse[dX].test(d1)) { return dX } else { if (!d0 && this._monthsParse[dX].test(d1)) { return dX } } } } } function dy(dX, dY) { var dZ; if (typeof dY === "string") { dY = dX.localeData().monthsParse(dY); if (typeof dY !== "number") { return dX } } dZ = Math.min(dX.date(), cO(dX.year(), dY)); dX._d["set" + (dX._isUTC ? "UTC" : "") + "Month"](dY, dZ); return dX } function o(dX) { if (dX != null) { dy(this, dX); de.updateOffset(this, true); return this } else { return c9(this, "Month") } } function aT() { return cO(this.year(), this.month()) } function a8(dX) { var dZ; var dY = dX._a; if (dY && ba(dX).overflow === -2) { dZ = dY[cx] < 0 || dY[cx] > 11 ? cx : dY[cg] < 1 || dY[cg] > cO(dY[co], dY[cx]) ? cg : dY[aF] < 0 || dY[aF] > 24 || (dY[aF] === 24 && (dY[ai] !== 0 || dY[a0] !== 0 || dY[H] !== 0)) ? aF : dY[ai] < 0 || dY[ai] > 59 ? ai : dY[a0] < 0 || dY[a0] > 59 ? a0 : dY[H] < 0 || dY[H] > 999 ? H : -1; if (ba(dX)._overflowDayOfYear && (dZ < co || dZ > cg)) { dZ = cg } ba(dX).overflow = dZ } return dX } function dt(dX) { if (de.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) { console.warn("Deprecation warning: " + dX) } } function aO(dY, dX) { var dZ = true; return aW(function () { if (dZ) { dt(dY + "\n" + (new Error()).stack); dZ = false } return dX.apply(this, arguments) }, dX) } var di = {}; function bf(dX, dY) { if (!di[dX]) { dt(dY); di[dX] = true } } de.suppressDeprecationWarnings = false; var b7 = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/; var ds = [["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/], ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/], ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/], ["GGGG-[W]WW", /\d{4}-W\d{2}/], ["YYYY-DDD", /\d{4}-\d{3}/]]; var cj = [["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/], ["HH:mm", /(T| )\d\d:\d\d/], ["HH", /(T| )\d\d/]]; var al = /^\/?Date\((\-?\d+)/i; function w(d1) { var d0, dX, dZ = d1._i, dY = b7.exec(dZ); if (dY) { ba(d1).iso = true; for (d0 = 0, dX = ds.length; d0 < dX; d0++) { if (ds[d0][1].exec(dZ)) { d1._f = ds[d0][0]; break } } for (d0 = 0, dX = cj.length; d0 < dX; d0++) { if (cj[d0][1].exec(dZ)) { d1._f += (dY[6] || " ") + cj[d0][0]; break } } if (dZ.match(dT)) { d1._f += "Z" } d(d1) } else { d1._isValid = false } } function bu(dY) { var dX = al.exec(dY._i); if (dX !== null) { dY._d = new Date(+dX[1]); return } w(dY); if (dY._isValid === false) { delete dY._isValid; de.createFromInputFallback(dY) } } de.createFromInputFallback = aO("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function (dX) { dX._d = new Date(dX._i + (dX._useUTC ? " UTC" : "")) }); function aE(d4, dX, d2, d1, d3, d0, dZ) { var dY = new Date(d4, dX, d2, d1, d3, d0, dZ); if (d4 < 1970) { dY.setFullYear(d4) } return dY } function bL(dY) { var dX = new Date(Date.UTC.apply(null, arguments)); if (dY < 1970) { dX.setUTCFullYear(dY) } return dX } a3(0, ["YY", 2], 0, function () { return this.year() % 100 }); a3(0, ["YYYY", 4], 0, "year"); a3(0, ["YYYYY", 5], 0, "year"); a3(0, ["YYYYYY", 6, true], 0, "year"); K("year", "y"); u("Y", dS); u("YY", ct, Q); u("YYYY", cp, W); u("YYYYY", cn, Y); u("YYYYYY", cn, Y); bp(["YYYYY", "YYYYYY"], co); bp("YYYY", function (dX, dY) { dY[co] = dX.length === 2 ? de.parseTwoDigitYear(dX) : dR(dX) }); bp("YY", function (dX, dY) { dY[co] = de.parseTwoDigitYear(dX) }); function ad(dX) { return b1(dX) ? 366 : 365 } function b1(dX) { return (dX % 4 === 0 && dX % 100 !== 0) || dX % 400 === 0 } de.parseTwoDigitYear = function (dX) { return dR(dX) + (dR(dX) > 68 ? 1900 : 2000) }; var dC = bw("FullYear", false); function cX() { return b1(this.year()) } a3("w", ["ww", 2], "wo", "week"); a3("W", ["WW", 2], "Wo", "isoWeek"); K("week", "w"); K("isoWeek", "W"); u("w", ct); u("ww", ct, Q); u("W", ct); u("WW", ct, Q); dW(["w", "ww", "W", "WW"], function (dX, d0, dZ, dY) { d0[dY.substr(0, 1)] = dR(dX) }); function C(d0, dY, d2) { var dX = d2 - dY, d1 = d2 - d0.day(), dZ; if (d1 > dX) { d1 -= 7 } if (d1 < dX - 7) { d1 += 7 } dZ = bJ(d0).add(d1, "d"); return { week: Math.ceil(dZ.dayOfYear() / 7), year: dZ.year() } } function c7(dX) { return C(dX, this._week.dow, this._week.doy).week } var bx = { dow: 0, doy: 6 }; function cJ() { return this._week.dow } function i() { return this._week.doy } function cc(dX) { var dY = this.localeData().week(this); return dX == null ? dY : this.add((dX - dY) * 7, "d") } function Z(dX) { var dY = C(this, 1, 4).week; return dX == null ? dY : this.add((dX - dY) * 7, "d") } a3("DDD", ["DDDD", 3], "DDDo", "dayOfYear"); K("dayOfYear", "DDD"); u("DDD", cr); u("DDDD", S); bp(["DDD", "DDDD"], function (dX, dZ, dY) { dY._dayOfYear = dR(dX) }); function aH(d3, dY, d0, d1, dX) { var d5 = 6 + dX - d1, dZ = bL(d3, 0, 1 + d5), d2 = dZ.getUTCDay(), d4; if (d2 < dX) { d2 += 7 } d0 = d0 != null ? 1 * d0 : dX; d4 = 1 + d5 + 7 * (dY - 1) - d2 + d0; return { year: d4 > 0 ? d3 : d3 - 1, dayOfYear: d4 > 0 ? d4 : ad(d3 - 1) + d4 } } function bQ(dX) { var dY = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 86400000) + 1; return dX == null ? dY : this.add((dX - dY), "d") } function bd(dY, dX, dZ) { if (dY != null) { return dY } if (dX != null) { return dX } return dZ } function bn(dY) { var dX = new Date(); if (dY._useUTC) { return [dX.getUTCFullYear(), dX.getUTCMonth(), dX.getUTCDate()] } return [dX.getFullYear(), dX.getMonth(), dX.getDate()] } function T(d1) { var d0, dZ, dY = [], dX, d2; if (d1._d) { return } dX = bn(d1); if (d1._w && d1._a[cg] == null && d1._a[cx] == null) { dp(d1) } if (d1._dayOfYear) { d2 = bd(d1._a[co], dX[co]); if (d1._dayOfYear > ad(d2)) { ba(d1)._overflowDayOfYear = true } dZ = bL(d2, 0, d1._dayOfYear); d1._a[cx] = dZ.getUTCMonth(); d1._a[cg] = dZ.getUTCDate() } for (d0 = 0; d0 < 3 && d1._a[d0] == null; ++d0) { d1._a[d0] = dY[d0] = dX[d0] } for (; d0 < 7; d0++) { d1._a[d0] = dY[d0] = (d1._a[d0] == null) ? (d0 === 2 ? 1 : 0) : d1._a[d0] } if (d1._a[aF] === 24 && d1._a[ai] === 0 && d1._a[a0] === 0 && d1._a[H] === 0) { d1._nextDay = true; d1._a[aF] = 0 } d1._d = (d1._useUTC ? bL : aE).apply(null, dY); if (d1._tzm != null) { d1._d.setUTCMinutes(d1._d.getUTCMinutes() - d1._tzm) } if (d1._nextDay) { d1._a[aF] = 24 } } function dp(d1) { var dX, dZ, d0, d2, d4, d3, dY; dX = d1._w; if (dX.GG != null || dX.W != null || dX.E != null) { d4 = 1; d3 = 4; dZ = bd(dX.GG, d1._a[co], C(bJ(), 1, 4).year); d0 = bd(dX.W, 1); d2 = bd(dX.E, 1) } else { d4 = d1._locale._week.dow; d3 = d1._locale._week.doy; dZ = bd(dX.gg, d1._a[co], C(bJ(), d4, d3).year); d0 = bd(dX.w, 1); if (dX.d != null) { d2 = dX.d; if (d2 < d4) { ++d0 } } else { if (dX.e != null) { d2 = dX.e + d4 } else { d2 = d4 } } } dY = aH(dZ, d0, d2, d3, d4); d1._a[co] = dY.year; d1._dayOfYear = dY.dayOfYear } de.ISO_8601 = function () { }; function d(d2) { if (d2._f === de.ISO_8601) { w(d2); return } d2._a = []; ba(d2).empty = true; var dZ = "" + d2._i, d1, d4, dX, d0, d3, d5 = dZ.length, dY = 0; dX = a1(d2._f, d2._locale).match(A) || []; for (d1 = 0; d1 < dX.length; d1++) { d0 = dX[d1]; d4 = (dZ.match(dd(d0, d2)) || [])[0]; if (d4) { d3 = dZ.substr(0, dZ.indexOf(d4)); if (d3.length > 0) { ba(d2).unusedInput.push(d3) } dZ = dZ.slice(dZ.indexOf(d4) + d4.length); dY += d4.length } if (dn[d0]) { if (d4) { ba(d2).empty = false } else { ba(d2).unusedTokens.push(d0) } cA(d0, d4, d2) } else { if (d2._strict && !d4) { ba(d2).unusedTokens.push(d0) } } } ba(d2).charsLeftOver = d5 - dY; if (dZ.length > 0) { ba(d2).unusedInput.push(dZ) } if (ba(d2).bigHour === true && d2._a[aF] <= 12 && d2._a[aF] > 0) { ba(d2).bigHour = undefined } d2._a[aF] = b0(d2._locale, d2._a[aF], d2._meridiem); T(d2); a8(d2) } function b0(d0, dY, dZ) { var dX; if (dZ == null) { return dY } if (d0.meridiemHour != null) { return d0.meridiemHour(dY, dZ) } else { if (d0.isPM != null) { dX = d0.isPM(dZ); if (dX && dY < 12) { dY += 12 } if (!dX && dY === 12) { dY = 0 } return dY } else { return dY } } } function z(dY) { var d1, dZ, d0, dX, d2; if (dY._f.length === 0) { ba(dY).invalidFormat = true; dY._d = new Date(NaN); return } for (dX = 0; dX < dY._f.length; dX++) { d2 = 0; d1 = k({}, dY); if (dY._useUTC != null) { d1._useUTC = dY._useUTC } d1._f = dY._f[dX]; d(d1); if (!c(d1)) { continue } d2 += ba(d1).charsLeftOver; d2 += ba(d1).unusedTokens.length * 10; ba(d1).score = d2; if (d0 == null || d2 < d0) { d0 = d2; dZ = d1 } } aW(dY, dZ || d1) } function ck(dY) { if (dY._d) { return } var dX = cG(dY._i); dY._a = [dX.year, dX.month, dX.day || dX.date, dX.hour, dX.minute, dX.second, dX.millisecond]; T(dY) } function bi(dY) { var dX = new bX(a8(dP(dY))); if (dX._nextDay) { dX.add(1, "d"); dX._nextDay = undefined } return dX } function dP(dY) { var dX = dY._i, dZ = dY._f; dY._locale = dY._locale || q(dY._l); if (dX === null || (dZ === undefined && dX === "")) { return bE({ nullInput: true }) } if (typeof dX === "string") { dY._i = dX = dY._locale.preparse(dX) } if (bK(dX)) { return new bX(a8(dX)) } else { if (bt(dZ)) { z(dY) } else { if (dZ) { d(dY) } else { if (cM(dX)) { dY._d = dX } else { bq(dY) } } } } return dY } function bq(dY) { var dX = dY._i; if (dX === undefined) { dY._d = new Date() } else { if (cM(dX)) { dY._d = new Date(+dX) } else { if (typeof dX === "string") { bu(dY) } else { if (bt(dX)) { dY._a = aZ(dX.slice(0), function (dZ) { return parseInt(dZ, 10) }); T(dY) } else { if (typeof (dX) === "object") { ck(dY) } else { if (typeof (dX) === "number") { dY._d = new Date(dX) } else { de.createFromInputFallback(dY) } } } } } } } function az(dY, d2, d0, dZ, dX) { var d1 = {}; if (typeof (d0) === "boolean") { dZ = d0; d0 = undefined } d1._isAMomentObject = true; d1._useUTC = d1._isUTC = dX; d1._l = d0; d1._i = dY; d1._f = d2; d1._strict = dZ; return bi(d1) } function bJ(dX, d0, dZ, dY) { return az(dX, d0, dZ, dY, false) } var cN = aO("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function () { var dX = bJ.apply(null, arguments); return dX < this ? this : dX }); var L = aO("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function () { var dX = bJ.apply(null, arguments); return dX > this ? this : dX }); function bI(dZ, d0) { var dY, dX; if (d0.length === 1 && bt(d0[0])) { d0 = d0[0] } if (!d0.length) { return bJ() } dY = d0[0]; for (dX = 1; dX < d0.length; ++dX) { if (!d0[dX].isValid() || d0[dX][dZ](dY)) { dY = d0[dX] } } return dY } function cy() { var dX = [].slice.call(arguments, 0); return bI("isBefore", dX) } function aS() { var dX = [].slice.call(arguments, 0); return bI("isAfter", dX) } function dm(d0) { var d4 = cG(d0), d1 = d4.year || 0, d3 = d4.quarter || 0, d2 = d4.month || 0, dX = d4.week || 0, d7 = d4.day || 0, d5 = d4.hour || 0, dZ = d4.minute || 0, d6 = d4.second || 0, dY = d4.millisecond || 0; this._milliseconds = +dY + d6 * 1000 + dZ * 60000 + d5 * 3600000; this._days = +d7 + dX * 7; this._months = +d2 + d3 * 3 + d1 * 12; this._data = {}; this._locale = q(); this._bubble() } function N(dX) { return dX instanceof dm } function U(dX, dY) { a3(dX, 0, 0, function () { var d0 = this.utcOffset(); var dZ = "+"; if (d0 < 0) { d0 = -d0; dZ = "-" } return dZ + V(~~(d0 / 60), 2) + dY + V(~~(d0) % 60, 2) }) } U("Z", ":"); U("ZZ", ""); u("Z", dT); u("ZZ", dT); bp(["Z", "ZZ"], function (dX, dZ, dY) { dY._useUTC = true; dY._tzm = bA(dX) }); var b5 = /([\+\-]|\d\d)/gi; function bA(dZ) { var d0 = ((dZ || "").match(dT) || []); var dX = d0[d0.length - 1] || []; var d1 = (dX + "").match(b5) || ["-", 0, 0]; var dY = +(d1[1] * 60) + dR(d1[2]); return d1[0] === "+" ? dY : -dY } function F(dX, dY) { var dZ, d0; if (dY._isUTC) { dZ = dY.clone(); d0 = (bK(dX) || cM(dX) ? +dX : +bJ(dX)) - (+dZ); dZ._d.setTime(+dZ._d + d0); de.updateOffset(dZ, false); return dZ } else { return bJ(dX).local() } } function b(dX) { return -Math.round(dX._d.getTimezoneOffset() / 15) * 15 } de.updateOffset = function () { }; function ci(dX, d0) { var dZ = this._offset || 0, dY; if (dX != null) { if (typeof dX === "string") { dX = bA(dX) } if (Math.abs(dX) < 16) { dX = dX * 60 } if (!this._isUTC && d0) { dY = b(this) } this._offset = dX; this._isUTC = true; if (dY != null) { this.add(dY, "m") } if (dZ !== dX) { if (!d0 || this._changeInProgress) { p(this, aB(dX - dZ, "m"), 1, false) } else { if (!this._changeInProgress) { this._changeInProgress = true; de.updateOffset(this, true); this._changeInProgress = null } } } return this } else { return this._isUTC ? dZ : b(this) } } function cZ(dX, dY) { if (dX != null) { if (typeof dX !== "string") { dX = -dX } this.utcOffset(dX, dY); return this } else { return -this.utcOffset() } } function v(dX) { return this.utcOffset(0, dX) } function b9(dX) { if (this._isUTC) { this.utcOffset(0, dX); this._isUTC = false; if (dX) { this.subtract(b(this), "m") } } return this } function bZ() { if (this._tzm) { this.utcOffset(this._tzm) } else { if (typeof this._i === "string") { this.utcOffset(bA(this._i)) } } return this } function bk(dX) { dX = dX ? bJ(dX).utcOffset() : 0; return (this.utcOffset() - dX) % 60 === 0 } function bg() { return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()) } function c8() { if (typeof this._isDSTShifted !== "undefined") { return this._isDSTShifted } var dY = {}; k(dY, this); dY = dP(dY); if (dY._a) { var dX = dY._isUTC ? dK(dY._a) : bJ(dY._a); this._isDSTShifted = this.isValid() && dF(dY._a, dX.toArray()) > 0 } else { this._isDSTShifted = false } return this._isDSTShifted } function a6() { return !this._isUTC } function bT() { return this._isUTC } function a5() { return this._isUTC && this._offset === 0 } var aP = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/; var cL = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/; function aB(dZ, d2) { var d3 = dZ, d1 = null, dY, d0, dX; if (N(dZ)) { d3 = { ms: dZ._milliseconds, d: dZ._days, M: dZ._months } } else { if (typeof dZ === "number") { d3 = {}; if (d2) { d3[d2] = dZ } else { d3.milliseconds = dZ } } else { if (!!(d1 = aP.exec(dZ))) { dY = (d1[1] === "-") ? -1 : 1; d3 = { y: 0, d: dR(d1[cg]) * dY, h: dR(d1[aF]) * dY, m: dR(d1[ai]) * dY, s: dR(d1[a0]) * dY, ms: dR(d1[H]) * dY } } else { if (!!(d1 = cL.exec(dZ))) { dY = (d1[1] === "-") ? -1 : 1; d3 = { y: bY(d1[2], dY), M: bY(d1[3], dY), d: bY(d1[4], dY), h: bY(d1[5], dY), m: bY(d1[6], dY), s: bY(d1[7], dY), w: bY(d1[8], dY) } } else { if (d3 == null) { d3 = {} } else { if (typeof d3 === "object" && ("from" in d3 || "to" in d3)) { dX = aU(bJ(d3.from), bJ(d3.to)); d3 = {}; d3.ms = dX.milliseconds; d3.M = dX.months } } } } } } d0 = new dm(d3); if (N(dZ) && a9(dZ, "_locale")) { d0._locale = dZ._locale } return d0 } aB.fn = dm.prototype; function bY(dZ, dX) { var dY = dZ && parseFloat(dZ.replace(",", ".")); return (isNaN(dY) ? 0 : dY) * dX } function ah(dZ, dX) { var dY = { milliseconds: 0, months: 0 }; dY.months = dX.month() - dZ.month() + (dX.year() - dZ.year()) * 12; if (dZ.clone().add(dY.months, "M").isAfter(dX)) { --dY.months } dY.milliseconds = +dX - +(dZ.clone().add(dY.months, "M")); return dY } function aU(dZ, dX) { var dY; dX = F(dX, dZ); if (dZ.isBefore(dX)) { dY = ah(dZ, dX) } else { dY = ah(dX, dZ); dY.milliseconds = -dY.milliseconds; dY.months = -dY.months } return dY } function ca(dY, dX) { return function (d2, d1) { var d0, dZ; if (d1 !== null && !isNaN(+d1)) { bf(dX, "moment()." + dX + "(period, number) is deprecated. Please use moment()." + dX + "(number, period)."); dZ = d2; d2 = d1; d1 = dZ } d2 = typeof d2 === "string" ? +d2 : d2; d0 = aB(d2, d1); p(this, d0, dY); return this } } function p(dY, d3, d2, d1) { var dX = d3._milliseconds, d0 = d3._days, dZ = d3._months; d1 = d1 == null ? true : d1; if (dX) { dY._d.setTime(+dY._d + dX * d2) } if (d0) { dG(dY, "Date", c9(dY, "Date") + d0 * d2) } if (dZ) { dy(dY, c9(dY, "Month") + dZ * d2) } if (d1) { de.updateOffset(dY, d0 || dZ) } } var dA = ca(1, "add"); var bM = ca(-1, "subtract"); function ao(d1, dZ) { var dY = d1 || bJ(), dX = F(dY, this).startOf("day"), d0 = this.diff(dX, "days", true), d2 = d0 < -6 ? "sameElse" : d0 < -1 ? "lastWeek" : d0 < 0 ? "lastDay" : d0 < 1 ? "sameDay" : d0 < 2 ? "nextDay" : d0 < 7 ? "nextWeek" : "sameElse"; return this.format(dZ && dZ[d2] || this.localeData().calendar(d2, this, bJ(dY))) } function c4() { return new bX(this) } function bS(dY, dX) { var dZ; dX = dw(typeof dX !== "undefined" ? dX : "millisecond"); if (dX === "millisecond") { dY = bK(dY) ? dY : bJ(dY); return +this > +dY } else { dZ = bK(dY) ? +dY : +bJ(dY); return dZ < +this.clone().startOf(dX) } } function bm(dY, dX) { var dZ; dX = dw(typeof dX !== "undefined" ? dX : "millisecond"); if (dX === "millisecond") { dY = bK(dY) ? dY : bJ(dY); return +this < +dY } else { dZ = bK(dY) ? +dY : +bJ(dY); return +this.clone().endOf(dX) < dZ } } function bP(dZ, dY, dX) { return this.isAfter(dZ, dX) && this.isBefore(dY, dX) } function dL(dY, dX) { var dZ; dX = dw(dX || "millisecond"); if (dX === "millisecond") { dY = bK(dY) ? dY : bJ(dY); return +this === +dY } else { dZ = +bJ(dY); return +(this.clone().startOf(dX)) <= dZ && dZ <= +(this.clone().endOf(dX)) } } function cs(dY, dX, d2) { var d1 = F(dY, this), dZ = (d1.utcOffset() - this.utcOffset()) * 60000, d3, d0; dX = dw(dX); if (dX === "year" || dX === "month" || dX === "quarter") { d0 = aX(this, d1); if (dX === "quarter") { d0 = d0 / 3 } else { if (dX === "year") { d0 = d0 / 12 } } } else { d3 = this - d1; d0 = dX === "second" ? d3 / 1000 : dX === "minute" ? d3 / 60000 : dX === "hour" ? d3 / 3600000 : dX === "day" ? (d3 - dZ) / 86400000 : dX === "week" ? (d3 - dZ) / 604800000 : d3 } return d2 ? d0 : bD(d0) } function aX(dY, dX) { var d1 = ((dX.year() - dY.year()) * 12) + (dX.month() - dY.month()), d0 = dY.clone().add(d1, "months"), dZ, d2; if (dX - d0 < 0) { dZ = dY.clone().add(d1 - 1, "months"); d2 = (dX - d0) / (d0 - dZ) } else { dZ = dY.clone().add(d1 + 1, "months"); d2 = (dX - d0) / (dZ - d0) } return -(d1 + d2) } de.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"; function dO() { return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ") } function cu() { var dX = this.clone().utc(); if (0 < dX.year() && dX.year() <= 9999) { if ("function" === typeof Date.prototype.toISOString) { return this.toDate().toISOString() } else { return m(dX, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") } } else { return m(dX, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]") } } function t(dY) { var dX = m(this, dY || de.defaultFormat); return this.localeData().postformat(dX) } function cW(dY, dX) { if (!this.isValid()) { return this.localeData().invalidDate() } return aB({ to: this, from: dY }).locale(this.locale()).humanize(!dX) } function cm(dX) { return this.from(bJ(), dX) } function aN(dY, dX) { if (!this.isValid()) { return this.localeData().invalidDate() } return aB({ from: this, to: dY }).locale(this.locale()).humanize(!dX) } function aR(dX) { return this.to(bJ(), dX) } function bz(dY) { var dX; if (dY === undefined) { return this._locale._abbr } else { dX = q(dY); if (dX != null) { this._locale = dX } return this } } var df = aO("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (dX) { if (dX === undefined) { return this.localeData() } else { return this.locale(dX) } }); function bR() { return this._locale } function ac(dX) { dX = dw(dX); switch (dX) { case "year": this.month(0); case "quarter": case "month": this.date(1); case "week": case "isoWeek": case "day": this.hours(0); case "hour": this.minutes(0); case "minute": this.seconds(0); case "second": this.milliseconds(0) } if (dX === "week") { this.weekday(0) } if (dX === "isoWeek") { this.isoWeekday(1) } if (dX === "quarter") { this.month(Math.floor(this.month() / 3) * 3) } return this } function cU(dX) { dX = dw(dX); if (dX === undefined || dX === "millisecond") { return this } return this.startOf(dX).add(1, (dX === "isoWeek" ? "week" : dX)).subtract(1, "ms") } function bU() { return +this._d - ((this._offset || 0) * 60000) } function bO() { return Math.floor(+this / 1000) } function cV() { return this._offset ? new Date(+this) : this._d } function dI() { var dX = this; return [dX.year(), dX.month(), dX.date(), dX.hour(), dX.minute(), dX.second(), dX.millisecond()] } function cK() { var dX = this; return { years: dX.year(), months: dX.month(), date: dX.date(), hours: dX.hours(), minutes: dX.minutes(), seconds: dX.seconds(), milliseconds: dX.milliseconds() } } function cv() { return c(this) } function j() { return aW({}, ba(this)) } function ch() { return ba(this).overflow } a3(0, ["gg", 2], 0, function () { return this.weekYear() % 100 }); a3(0, ["GG", 2], 0, function () { return this.isoWeekYear() % 100 }); function dl(dX, dY) { a3(0, [dX, dX.length], 0, dY) } dl("gggg", "weekYear"); dl("ggggg", "weekYear"); dl("GGGG", "isoWeekYear"); dl("GGGGG", "isoWeekYear"); K("weekYear", "gg"); K("isoWeekYear", "GG"); u("G", dS); u("g", dS); u("GG", ct, Q); u("gg", ct, Q); u("GGGG", cp, W); u("gggg", cp, W); u("GGGGG", cn, Y); u("ggggg", cn, Y); dW(["gggg", "ggggg", "GGGG", "GGGGG"], function (dX, d0, dZ, dY) { d0[dY.substr(0, 2)] = dR(dX) }); dW(["gg", "GG"], function (dX, d0, dZ, dY) { d0[dY] = de.parseTwoDigitYear(dX) }); function dc(dX, dZ, dY) { return C(bJ([dX, 11, 31 + dZ - dY]), dZ, dY).week } function cP(dX) { var dY = C(this, this.localeData()._week.dow, this.localeData()._week.doy).year; return dX == null ? dY : this.add((dX - dY), "y") } function cD(dX) { var dY = C(this, 1, 4).year; return dX == null ? dY : this.add((dX - dY), "y") } function dV() { return dc(this.year(), 1, 4) } function ar() { var dX = this.localeData()._week; return dc(this.year(), dX.dow, dX.doy) } a3("Q", 0, 0, "quarter"); K("quarter", "Q"); u("Q", P); bp("Q", function (dX, dY) { dY[cx] = (dR(dX) - 1) * 3 }); function bH(dX) { return dX == null ? Math.ceil((this.month() + 1) / 3) : this.month((dX - 1) * 3 + this.month() % 3) } a3("D", ["DD", 2], "Do", "date"); K("date", "D"); u("D", ct); u("DD", ct, Q); u("Do", function (dY, dX) { return dY ? dX._ordinalParse : dX._ordinalParseLenient }); bp(["D", "DD"], cg); bp("Do", function (dX, dY) { dY[cg] = dR(dX.match(ct)[0], 10) }); var dH = bw("Date", true); a3("d", 0, "do", "day"); a3("dd", 0, 0, function (dX) { return this.localeData().weekdaysMin(this, dX) }); a3("ddd", 0, 0, function (dX) { return this.localeData().weekdaysShort(this, dX) }); a3("dddd", 0, 0, function (dX) { return this.localeData().weekdays(this, dX) }); a3("e", 0, 0, "weekday"); a3("E", 0, 0, "isoWeekday"); K("day", "d"); K("weekday", "e"); K("isoWeekday", "E"); u("d", ct); u("e", ct); u("E", ct); u("dd", D); u("ddd", D); u("dddd", D); dW(["dd", "ddd", "dddd"], function (dX, dZ, dY) { var d0 = dY._locale.weekdaysParse(dX); if (d0 != null) { dZ.d = d0 } else { ba(dY).invalidWeekday = dX } }); dW(["d", "e", "E"], function (dX, d0, dZ, dY) { d0[dY] = dR(dX) }); function au(dX, dY) { if (typeof dX !== "string") { return dX } if (!isNaN(dX)) { return parseInt(dX, 10) } dX = dY.weekdaysParse(dX); if (typeof dX === "number") { return dX } return null } var db = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"); function bN(dX) { return this._weekdays[dX.day()] } var y = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"); function dN(dX) { return this._weekdaysShort[dX.day()] } var aD = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"); function B(dX) { return this._weekdaysMin[dX.day()] } function ag(dX) { var dY, d0, dZ; this._weekdaysParse = this._weekdaysParse || []; for (dY = 0; dY < 7; dY++) { if (!this._weekdaysParse[dY]) { d0 = bJ([2000, 1]).day(dY); dZ = "^" + this.weekdays(d0, "") + "|^" + this.weekdaysShort(d0, "") + "|^" + this.weekdaysMin(d0, ""); this._weekdaysParse[dY] = new RegExp(dZ.replace(".", ""), "i") } if (this._weekdaysParse[dY].test(dX)) { return dY } } } function aA(dY) { var dX = this._isUTC ? this._d.getUTCDay() : this._d.getDay(); if (dY != null) { dY = au(dY, this.localeData()); return this.add(dY - dX, "d") } else { return dX } } function cI(dX) { var dY = (this.day() + 7 - this.localeData()._week.dow) % 7; return dX == null ? dY : this.add(dX - dY, "d") } function b4(dX) { return dX == null ? this.day() || 7 : this.day(this.day() % 7 ? dX : dX - 7) } a3("H", ["HH", 2], 0, "hour"); a3("h", ["hh", 2], 0, function () { return this.hours() % 12 || 12 }); function l(dY, dX) { a3(dY, 0, 0, function () { return this.localeData().meridiem(this.hours(), this.minutes(), dX) }) } l("a", true); l("A", false); K("hour", "h"); function a4(dY, dX) { return dX._meridiemParse } u("a", a4); u("A", a4); u("H", ct); u("h", ct); u("HH", ct, Q); u("hh", ct, Q); bp(["H", "HH"], aF); bp(["a", "A"], function (dX, dZ, dY) { dY._isPm = dY._locale.isPM(dX); dY._meridiem = dX }); bp(["h", "hh"], function (dX, dZ, dY) { dZ[aF] = dR(dX); ba(dY).bigHour = true }); function bl(dX) { return ((dX + "").toLowerCase().charAt(0) === "p") } var ae = /[ap]\.?m?\.?/i; function x(dX, dY, dZ) { if (dX > 11) { return dZ ? "pm" : "PM" } else { return dZ ? "am" : "AM" } } var aK = bw("Hours", true); a3("m", ["mm", 2], 0, "minute"); K("minute", "m"); u("m", ct); u("mm", ct, Q); bp(["m", "mm"], ai); var dh = bw("Minutes", false); a3("s", ["ss", 2], 0, "second"); K("second", "s"); u("s", ct); u("ss", ct, Q); bp(["s", "ss"], a0); var cq = bw("Seconds", false); a3("S", 0, 0, function () { return ~~(this.millisecond() / 100) }); a3(0, ["SS", 2], 0, function () { return ~~(this.millisecond() / 10) }); a3(0, ["SSS", 3], 0, "millisecond"); a3(0, ["SSSS", 4], 0, function () { return this.millisecond() * 10 }); a3(0, ["SSSSS", 5], 0, function () { return this.millisecond() * 100 }); a3(0, ["SSSSSS", 6], 0, function () { return this.millisecond() * 1000 }); a3(0, ["SSSSSSS", 7], 0, function () { return this.millisecond() * 10000 }); a3(0, ["SSSSSSSS", 8], 0, function () { return this.millisecond() * 100000 }); a3(0, ["SSSSSSSSS", 9], 0, function () { return this.millisecond() * 1000000 }); K("millisecond", "ms"); u("S", cr, P); u("SS", cr, Q); u("SSS", cr, S); var be; for (be = "SSSS"; be.length <= 9; be += "S") { u(be, cR) } function cS(dX, dY) { dY[H] = dR(("0." + dX) * 1000) } for (be = "S"; be.length <= 9; be += "S") { bp(be, cS) } var c6 = bw("Milliseconds", false); a3("z", 0, 0, "zoneAbbr"); a3("zz", 0, 0, "zoneName"); function dD() { return this._isUTC ? "UTC" : "" } function bo() { return this._isUTC ? "Coordinated Universal Time" : "" } var dU = bX.prototype; dU.add = dA; dU.calendar = ao; dU.clone = c4; dU.diff = cs; dU.endOf = cU; dU.format = t; dU.from = cW; dU.fromNow = cm; dU.to = aN; dU.toNow = aR; dU.get = b6; dU.invalidAt = ch; dU.isAfter = bS; dU.isBefore = bm; dU.isBetween = bP; dU.isSame = dL; dU.isValid = cv; dU.lang = df; dU.locale = bz; dU.localeData = bR; dU.max = L; dU.min = cN; dU.parsingFlags = j; dU.set = b6; dU.startOf = ac; dU.subtract = bM; dU.toArray = dI; dU.toObject = cK; dU.toDate = cV; dU.toISOString = cu; dU.toJSON = cu; dU.toString = dO; dU.unix = bO; dU.valueOf = bU; dU.year = dC; dU.isLeapYear = cX; dU.weekYear = cP; dU.isoWeekYear = cD; dU.quarter = dU.quarters = bH; dU.month = o; dU.daysInMonth = aT; dU.week = dU.weeks = cc; dU.isoWeek = dU.isoWeeks = Z; dU.weeksInYear = ar; dU.isoWeeksInYear = dV; dU.date = dH; dU.day = dU.days = aA; dU.weekday = cI; dU.isoWeekday = b4; dU.dayOfYear = bQ; dU.hour = dU.hours = aK; dU.minute = dU.minutes = dh; dU.second = dU.seconds = cq; dU.millisecond = dU.milliseconds = c6; dU.utcOffset = ci; dU.utc = v; dU.local = b9; dU.parseZone = bZ; dU.hasAlignedHourOffset = bk; dU.isDST = bg; dU.isDSTShifted = c8; dU.isLocal = a6; dU.isUtcOffset = bT; dU.isUtc = a5; dU.isUTC = a5; dU.zoneAbbr = dD; dU.zoneName = bo; dU.dates = aO("dates accessor is deprecated. Use date instead.", dH); dU.months = aO("months accessor is deprecated. Use month instead", o); dU.years = aO("years accessor is deprecated. Use year instead", dC); dU.zone = aO("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", cZ); var cF = dU; function bW(dX) { return bJ(dX * 1000) } function cz() { return bJ.apply(null, arguments).parseZone() } var aJ = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" }; function b3(dY, d0, dX) { var dZ = this._calendar[dY]; return typeof dZ === "function" ? dZ.call(d0, dX) : dZ } var c5 = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }; function ce(dX) { var dZ = this._longDateFormat[dX], dY = this._longDateFormat[dX.toUpperCase()]; if (dZ || !dY) { return dZ } this._longDateFormat[dX] = dY.replace(/MMMM|MM|DD|dddd/g, function (d0) { return d0.slice(1) }); return this._longDateFormat[dX] } var an = "Invalid date"; function aI() { return this._invalidDate } var bh = "%d"; var du = /\d{1,2}/; function c1(dX) { return this._ordinal.replace("%d", dX) } function g(dX) { return dX } var av = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" }; function dk(dX, d0, dY, d1) { var dZ = this._relativeTime[dY]; return (typeof dZ === "function") ? dZ(dX, d0, dY, d1) : dZ.replace(/%d/i, dX) } function da(dY, dX) { var dZ = this._relativeTime[dY > 0 ? "future" : "past"]; return typeof dZ === "function" ? dZ(dX) : dZ.replace(/%s/i, dX) } function G(dY) { var dZ, dX; for (dX in dY) { dZ = dY[dX]; if (typeof dZ === "function") { this[dX] = dZ } else { this["_" + dX] = dZ } } this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + (/\d{1,2}/).source) } var br = cQ.prototype; br._calendar = aJ; br.calendar = b3; br._longDateFormat = c5; br.longDateFormat = ce; br._invalidDate = an; br.invalidDate = aI; br._ordinal = bh; br.ordinal = c1; br._ordinalParse = du; br.preparse = g; br.postformat = g; br._relativeTime = av; br.relativeTime = dk; br.pastFuture = da; br.set = G; br.months = a7; br._months = E; br.monthsShort = aM; br._monthsShort = by; br.monthsParse = bV; br.week = c7; br._week = bx; br.firstDayOfYear = i; br.firstDayOfWeek = cJ; br.weekdays = bN; br._weekdays = db; br.weekdaysMin = B; br._weekdaysMin = aD; br.weekdaysShort = dN; br._weekdaysShort = y; br.weekdaysParse = ag; br.isPM = bl; br._meridiemParse = ae; br.meridiem = x; function bj(d2, dX, d1, d0) { var dZ = q(); var dY = dK().set(d0, dX); return dZ[d1](dY, d2) } function aQ(d3, dY, d2, d0, d1) { if (typeof d3 === "number") { dY = d3; d3 = undefined } d3 = d3 || ""; if (dY != null) { return bj(d3, dY, d2, d1) } var dZ; var dX = []; for (dZ = 0; dZ < d0; dZ++) { dX[dZ] = bj(d3, dZ, d2, d1) } return dX } function c0(dY, dX) { return aQ(dY, dX, "months", 12, "month") } function bC(dY, dX) { return aQ(dY, dX, "monthsShort", 12, "month") } function ap(dY, dX) { return aQ(dY, dX, "weekdays", 7, "day") } function dq(dY, dX) { return aQ(dY, dX, "weekdaysShort", 7, "day") } function ay(dY, dX) { return aQ(dY, dX, "weekdaysMin", 7, "day") } dr("en", { ordinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function (dY) { var dX = dY % 10, dZ = (dR(dY % 100 / 10) === 1) ? "th" : (dX === 1) ? "st" : (dX === 2) ? "nd" : (dX === 3) ? "rd" : "th"; return dY + dZ } }); de.lang = aO("moment.lang is deprecated. Use moment.locale instead.", dr); de.langData = aO("moment.langData is deprecated. Use moment.localeData instead.", q); var n = Math.abs; function bG() { var dX = this._data; this._milliseconds = n(this._milliseconds); this._days = n(this._days); this._months = n(this._months); dX.milliseconds = n(dX.milliseconds); dX.seconds = n(dX.seconds); dX.minutes = n(dX.minutes); dX.hours = n(dX.hours); dX.months = n(dX.months); dX.years = n(dX.years); return this } function aG(d1, dY, dZ, d0) { var dX = aB(dY, dZ); d1._milliseconds += d0 * dX._milliseconds; d1._days += d0 * dX._days; d1._months += d0 * dX._months; return d1._bubble() } function bF(dX, dY) { return aG(this, dX, dY, 1) } function bs(dX, dY) { return aG(this, dX, dY, -1) } function J(dX) { if (dX < 0) { return Math.floor(dX) } else { return Math.ceil(dX) } } function bB() { var dX = this._milliseconds; var d5 = this._days; var d2 = this._months; var dZ = this._data; var d4, dY, d3, d1, d0; if (!((dX >= 0 && d5 >= 0 && d2 >= 0) || (dX <= 0 && d5 <= 0 && d2 <= 0))) { dX += J(aw(d2) + d5) * 86400000; d5 = 0; d2 = 0 } dZ.milliseconds = dX % 1000; d4 = bD(dX / 1000); dZ.seconds = d4 % 60; dY = bD(d4 / 60); dZ.minutes = dY % 60; d3 = bD(dY / 60); dZ.hours = d3 % 24; d5 += bD(d3 / 24); d0 = bD(f(d5)); d2 += d0; d5 -= J(aw(d0)); d1 = bD(d2 / 12); d2 %= 12; dZ.days = d5; dZ.months = d2; dZ.years = d1; return this } function f(dX) { return dX * 4800 / 146097 } function aw(dX) { return dX * 146097 / 4800 } function dg(dX) { var d0; var dZ; var dY = this._milliseconds; dX = dw(dX); if (dX === "month" || dX === "year") { d0 = this._days + dY / 86400000; dZ = this._months + f(d0); return dX === "month" ? dZ : dZ / 12 } else { d0 = this._days + Math.round(aw(this._months)); switch (dX) { case "week": return d0 / 7 + dY / 604800000; case "day": return d0 + dY / 86400000; case "hour": return d0 * 24 + dY / 3600000; case "minute": return d0 * 1440 + dY / 60000; case "second": return d0 * 86400 + dY / 1000; case "millisecond": return Math.floor(d0 * 86400000) + dY; default: throw new Error("Unknown unit " + dX) } } } function cC() { return (this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + dR(this._months / 12) * 31536000000) } function M(dX) { return function () { return this.as(dX) } } var h = M("ms"); var a = M("s"); var aY = M("m"); var dQ = M("h"); var ax = M("d"); var cd = M("w"); var dz = M("M"); var cE = M("y"); function ak(dX) { dX = dw(dX); return this[dX + "s"]() } function aC(dX) { return function () { return this._data[dX] } } var e = aC("milliseconds"); var aj = aC("seconds"); var bc = aC("minutes"); var b8 = aC("hours"); var ab = aC("days"); var am = aC("months"); var dj = aC("years"); function dM() { return bD(this.days() / 7) } var X = Math.round; var cl = { s: 45, m: 45, h: 22, d: 26, M: 11 }; function aa(dY, dX, dZ, d1, d0) { return d0.relativeTime(dX || 1, !!dZ, dY, d1) } function c2(dY, dX, d7) { var d0 = aB(dY).abs(); var d5 = X(d0.as("s")); var dZ = X(d0.as("m")); var d4 = X(d0.as("h")); var d6 = X(d0.as("d")); var d2 = X(d0.as("M")); var d1 = X(d0.as("y")); var d3 = d5 < cl.s && ["s", d5] || dZ === 1 && ["m"] || dZ < cl.m && ["mm", dZ] || d4 === 1 && ["h"] || d4 < cl.h && ["hh", d4] || d6 === 1 && ["d"] || d6 < cl.d && ["dd", d6] || d2 === 1 && ["M"] || d2 < cl.M && ["MM", d2] || d1 === 1 && ["y"] || ["yy", d1]; d3[2] = dX; d3[3] = +dY > 0; d3[4] = d7; return aa.apply(null, d3) } function aq(dY, dX) { if (cl[dY] === undefined) { return false } if (dX === undefined) { return cl[dY] } cl[dY] = dX; return true } function b2(dZ) { var dY = this.localeData(); var dX = c2(this, !dZ, dY); if (dZ) { dX = dY.pastFuture(+this, dX) } return dY.postformat(dX) } var cb = Math.abs; function O() { var d7 = cb(this._milliseconds) / 1000; var d8 = cb(this._days); var d3 = cb(this._months); var d0, d6, d2; d0 = bD(d7 / 60); d6 = bD(d0 / 60); d7 %= 60; d0 %= 60; d2 = bD(d3 / 12); d3 %= 12; var dY = d2; var d4 = d3; var dX = d8; var d1 = d6; var dZ = d0; var d9 = d7; var d5 = this.asSeconds(); if (!d5) { return "P0D" } return (d5 < 0 ? "-" : "") + "P" + (dY ? dY + "Y" : "") + (d4 ? d4 + "M" : "") + (dX ? dX + "D" : "") + ((d1 || dZ || d9) ? "T" : "") + (d1 ? d1 + "H" : "") + (dZ ? dZ + "M" : "") + (d9 ? d9 + "S" : "") } var af = dm.prototype; af.abs = bG; af.add = bF; af.subtract = bs; af.as = dg; af.asMilliseconds = h; af.asSeconds = a; af.asMinutes = aY; af.asHours = dQ; af.asDays = ax; af.asWeeks = cd; af.asMonths = dz; af.asYears = cE; af.valueOf = cC; af._bubble = bB; af.get = ak; af.milliseconds = e; af.seconds = aj; af.minutes = bc; af.hours = b8; af.days = ab; af.weeks = dM; af.months = am; af.years = dj; af.humanize = b2; af.toISOString = O; af.toString = O; af.toJSON = O; af.locale = bz; af.localeData = bR; af.toIsoString = aO("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", O); af.lang = df; a3("X", 0, 0, "unix"); a3("x", 0, 0, "valueOf"); u("x", dS); u("X", R); bp("X", function (dX, dZ, dY) { dY._d = new Date(parseFloat(dX, 10) * 1000) }); bp("x", function (dX, dZ, dY) { dY._d = new Date(dR(dX)) }); de.version = "2.10.6"; aV(bJ); de.fn = cF; de.min = cy; de.max = aS; de.utc = dK; de.unix = bW; de.months = c0; de.isDate = cM; de.locale = dr; de.invalid = bE; de.duration = aB; de.isMoment = bK; de.weekdays = ap; de.parseZone = cz; de.localeData = q; de.isDuration = N; de.monthsShort = bC; de.weekdaysMin = ay; de.defineLocale = r; de.weekdaysShort = dq; de.normalizeUnits = dw; de.relativeTimeThreshold = aq; var cf = de; return cf })); moment.defineLocale("zh-cn", { months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"), monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"), weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"), weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"), weekdaysMin: "日_一_二_三_四_五_六".split("_"), longDateFormat: { LT: "Ah点mm分", LTS: "Ah点m分s秒", L: "YYYY-MM-DD", LL: "YYYY年MMMD日", LLL: "YYYY年MMMD日Ah点mm分", LLLL: "YYYY年MMMD日ddddAh点mm分", l: "YYYY-MM-DD", ll: "YYYY年MMMD日", lll: "YYYY年MMMD日Ah点mm分", llll: "YYYY年MMMD日ddddAh点mm分" }, meridiemParse: /凌晨|早上|上午|中午|下午|晚上/, meridiemHour: function (d, c) { if (d === 12) { d = 0 } if (c === "凌晨" || c === "早上" || c === "上午") { return d } else { if (c === "下午" || c === "晚上") { return d + 12 } else { return d >= 11 ? d : d + 12 } } }, meridiem: function (f, h, e) { var g = f * 100 + h; if (g < 600) { return "凌晨" } else { if (g < 900) { return "早上" } else { if (g < 1130) { return "上午" } else { if (g < 1230) { return "中午" } else { if (g < 1800) { return "下午" } else { return "晚上" } } } } } }, calendar: { sameDay: function () { return this.minutes() === 0 ? "[今天]Ah[点整]" : "[今天]LT" }, nextDay: function () { return this.minutes() === 0 ? "[明天]Ah[点整]" : "[明天]LT" }, lastDay: function () { return this.minutes() === 0 ? "[昨天]Ah[点整]" : "[昨天]LT" }, nextWeek: function () { var c, d; c = moment().startOf("week"); d = this.unix() - c.unix() >= 7 * 24 * 3600 ? "[下]" : "[本]"; return this.minutes() === 0 ? d + "dddAh点整" : d + "dddAh点mm" }, lastWeek: function () { var c, d; c = moment().startOf("week"); d = this.unix() < c.unix() ? "[上]" : "[本]"; return this.minutes() === 0 ? d + "dddAh点整" : d + "dddAh点mm" }, sameElse: "LL" }, ordinalParse: /\d{1,2}(日|月|周)/, ordinal: function (d, c) { switch (c) { case "d": case "D": case "DDD": return d + "日"; case "M": return d + "月"; case "w": case "W": return d + "周"; default: return d } }, relativeTime: { future: "%s内", past: "%s前", s: "几秒", m: "1 分钟", mm: "%d 分钟", h: "1 小时", hh: "%d 小时", d: "1 天", dd: "%d 天", M: "1 个月", MM: "%d 个月", y: "1 年", yy: "%d 年" }, week: { dow: 1, doy: 4 } });